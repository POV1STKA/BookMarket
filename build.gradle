plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.barfuin.gradle.jacocolog' version '3.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

ext {
	// Minimal Coverage
	minimumCoveragePerFile = 0.8
	filesExcludedFromCoverage = [
			"**/*BookMarketApplication.*",
			"**/domain/*",
			"**/common/*",
			"**/dto/*",
			"**/util/*",
			"**/web/*",
			"**/service/mapper*",
			"**/*CustomerService*",
			"**/config/*Configuration.*"
	]
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

apply from: "${rootProject.projectDir}/gradle/test.gradle"
apply from: "${rootProject.projectDir}/gradle/jacoco.gradle"

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
	testImplementation 'org.mockito:mockito-core:5.8.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
